"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useHeadingAnimation.tsx":
/*!*******************************************!*\
  !*** ./src/hooks/useHeadingAnimation.tsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HEADING_ANIMATION_PRESETS: () => (/* binding */ HEADING_ANIMATION_PRESETS),\n/* harmony export */   useHeadingAnimation: () => (/* binding */ useHeadingAnimation)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gsap */ \"(app-pages-browser)/./node_modules/gsap/index.js\");\n// hooks/useHeadingAnimation.tsx\n/* __next_internal_client_entry_do_not_use__ useHeadingAnimation,HEADING_ANIMATION_PRESETS auto */ var _s = $RefreshSig$();\n\n\n/**\n * Custom hook for playful GSAP heading animations with per-letter interactivity\n * Inspired by GSAP homepage - no layout shift during animations\n * @param options - Configuration options for the animation\n * @returns Ref to attach to the heading element\n */ const useHeadingAnimation = function() {\n    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    _s();\n    const { animationType = 'bounce', duration = 0.5, ease = 'elastic.out(1, 0.3)', scale = 1.2, enableSquish = true, hoverColor, addGlow = false, adjacentStagger = 0.05 } = options;\n    const headingRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const charsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    const timelinesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useHeadingAnimation.useEffect\": ()=>{\n            if (!headingRef.current) return;\n            // Store original styles\n            const originalStyles = {\n                letterSpacing: window.getComputedStyle(headingRef.current).letterSpacing,\n                lineHeight: window.getComputedStyle(headingRef.current).lineHeight\n            };\n            // Split text into individual characters\n            const text = headingRef.current.textContent || '';\n            const chars = text.split('').map({\n                \"useHeadingAnimation.useEffect.chars\": (char)=>char === ' ' ? '\\u00A0' : char\n            }[\"useHeadingAnimation.useEffect.chars\"]);\n            // Clear existing content\n            headingRef.current.innerHTML = '';\n            // Maintain original spacing\n            headingRef.current.style.letterSpacing = originalStyles.letterSpacing;\n            headingRef.current.style.lineHeight = originalStyles.lineHeight;\n            // Create span for each character\n            charsRef.current = chars.map({\n                \"useHeadingAnimation.useEffect\": (char, index)=>{\n                    var _headingRef_current;\n                    const span = document.createElement('span');\n                    span.textContent = char;\n                    // Critical: Keep layout stable during animations\n                    span.style.display = 'inline-block';\n                    span.style.position = 'relative';\n                    span.style.cursor = 'pointer';\n                    span.style.transition = 'text-shadow 0.3s ease, color 0.2s ease';\n                    // Prevent layout shift - keep original space\n                    span.style.transformOrigin = 'center center';\n                    span.style.willChange = 'transform';\n                    // Prevent text selection for better UX\n                    span.style.userSelect = 'none';\n                    span.style.WebkitUserSelect = 'none';\n                    span.dataset.index = String(index);\n                    (_headingRef_current = headingRef.current) === null || _headingRef_current === void 0 ? void 0 : _headingRef_current.appendChild(span);\n                    return span;\n                }\n            }[\"useHeadingAnimation.useEffect\"]);\n            // Create animation timeline for each character\n            timelinesRef.current = charsRef.current.map({\n                \"useHeadingAnimation.useEffect\": (char, index)=>{\n                    const tl = gsap__WEBPACK_IMPORTED_MODULE_1__.gsap.timeline({\n                        paused: true\n                    });\n                    // Define animation based on type - using transforms only (no scale changes that affect layout)\n                    switch(animationType){\n                        case 'bounce':\n                            tl.to(char, {\n                                y: -20,\n                                duration: duration * 0.4,\n                                ease: 'power2.out'\n                            }).to(char, {\n                                y: 0,\n                                duration: duration * 0.6,\n                                ease: ease\n                            });\n                            break;\n                        case 'flip':\n                            tl.to(char, {\n                                rotationX: 360,\n                                duration: duration,\n                                ease: ease\n                            });\n                            break;\n                        case 'rotate':\n                            tl.to(char, {\n                                rotation: 360,\n                                duration: duration,\n                                ease: ease\n                            });\n                            break;\n                        case 'elastic':\n                            tl.to(char, {\n                                y: -20,\n                                duration: duration * 0.3,\n                                ease: 'power2.out'\n                            }).to(char, {\n                                y: 5,\n                                duration: duration * 0.3,\n                                ease: 'power2.in'\n                            }).to(char, {\n                                y: 0,\n                                duration: duration * 0.4,\n                                ease: 'elastic.out(1, 0.5)'\n                            });\n                            break;\n                        case 'squeeze':\n                            // Use skew instead of scale for squish effect\n                            tl.to(char, {\n                                skewX: 10,\n                                duration: duration * 0.3,\n                                ease: 'power2.inOut'\n                            }).to(char, {\n                                skewX: -10,\n                                duration: duration * 0.4,\n                                ease: 'power2.inOut'\n                            }).to(char, {\n                                skewX: 0,\n                                duration: duration * 0.3,\n                                ease: 'elastic.out(1, 0.3)'\n                            });\n                            break;\n                        case 'wave':\n                            tl.to(char, {\n                                y: -15,\n                                duration: duration * 0.4,\n                                ease: 'power2.out'\n                            }).to(char, {\n                                y: 5,\n                                duration: duration * 0.3,\n                                ease: 'power2.inOut'\n                            }).to(char, {\n                                y: 0,\n                                duration: duration * 0.3,\n                                ease: 'elastic.out(1, 0.4)'\n                            });\n                            break;\n                        case 'random':\n                            const randomTypes = [\n                                'bounce',\n                                'flip',\n                                'rotate',\n                                'elastic',\n                                'squeeze',\n                                'wave'\n                            ];\n                            const randomType = randomTypes[Math.floor(Math.random() * randomTypes.length)];\n                            // Apply random animation inline\n                            if (randomType === 'bounce') {\n                                tl.to(char, {\n                                    y: -20,\n                                    duration: duration * 0.4,\n                                    ease: 'power2.out'\n                                }).to(char, {\n                                    y: 0,\n                                    duration: duration * 0.6,\n                                    ease: ease\n                                });\n                            } else if (randomType === 'rotate') {\n                                tl.to(char, {\n                                    rotation: 360,\n                                    duration: duration,\n                                    ease: ease\n                                });\n                            } else if (randomType === 'wave') {\n                                tl.to(char, {\n                                    y: -15,\n                                    duration: duration * 0.4,\n                                    ease: 'power2.out'\n                                }).to(char, {\n                                    y: 5,\n                                    duration: duration * 0.3,\n                                    ease: 'power2.inOut'\n                                }).to(char, {\n                                    y: 0,\n                                    duration: duration * 0.3,\n                                    ease: 'elastic.out(1, 0.4)'\n                                });\n                            }\n                            break;\n                        default:\n                            tl.to(char, {\n                                y: -20,\n                                duration: duration * 0.5,\n                                ease: 'power2.out'\n                            }).to(char, {\n                                y: 0,\n                                duration: duration * 0.5,\n                                ease: ease\n                            });\n                    }\n                    // Add color change if specified (as separate animation, not affecting timeline)\n                    if (hoverColor) {\n                    // Color changes via CSS transition, not GSAP timeline\n                    }\n                    return tl;\n                }\n            }[\"useHeadingAnimation.useEffect\"]);\n            // Add event listeners for each character\n            charsRef.current.forEach({\n                \"useHeadingAnimation.useEffect\": (char, index)=>{\n                    const handleMouseEnter = {\n                        \"useHeadingAnimation.useEffect.handleMouseEnter\": ()=>{\n                            var // Play animation for hovered character\n                            _timelinesRef_current_index;\n                            (_timelinesRef_current_index = timelinesRef.current[index]) === null || _timelinesRef_current_index === void 0 ? void 0 : _timelinesRef_current_index.restart();\n                            // Color change via inline style (uses CSS transition)\n                            if (hoverColor) {\n                                char.style.color = hoverColor;\n                            }\n                            // Add glow effect if enabled\n                            if (addGlow) {\n                                char.style.textShadow = '0 0 20px rgba(59, 130, 246, 0.8), 0 0 30px rgba(59, 130, 246, 0.5)';\n                            }\n                            // Animate adjacent characters with stagger\n                            if (adjacentStagger > 0) {\n                                if (index > 0) {\n                                    gsap__WEBPACK_IMPORTED_MODULE_1__.gsap.delayedCall(adjacentStagger, {\n                                        \"useHeadingAnimation.useEffect.handleMouseEnter\": ()=>{\n                                            var _timelinesRef_current_;\n                                            (_timelinesRef_current_ = timelinesRef.current[index - 1]) === null || _timelinesRef_current_ === void 0 ? void 0 : _timelinesRef_current_.restart();\n                                            if (hoverColor) charsRef.current[index - 1].style.color = hoverColor;\n                                            if (addGlow) charsRef.current[index - 1].style.textShadow = '0 0 20px rgba(59, 130, 246, 0.8), 0 0 30px rgba(59, 130, 246, 0.5)';\n                                        }\n                                    }[\"useHeadingAnimation.useEffect.handleMouseEnter\"]);\n                                }\n                                if (index < charsRef.current.length - 1) {\n                                    gsap__WEBPACK_IMPORTED_MODULE_1__.gsap.delayedCall(adjacentStagger, {\n                                        \"useHeadingAnimation.useEffect.handleMouseEnter\": ()=>{\n                                            var _timelinesRef_current_;\n                                            (_timelinesRef_current_ = timelinesRef.current[index + 1]) === null || _timelinesRef_current_ === void 0 ? void 0 : _timelinesRef_current_.restart();\n                                            if (hoverColor) charsRef.current[index + 1].style.color = hoverColor;\n                                            if (addGlow) charsRef.current[index + 1].style.textShadow = '0 0 20px rgba(59, 130, 246, 0.8), 0 0 30px rgba(59, 130, 246, 0.5)';\n                                        }\n                                    }[\"useHeadingAnimation.useEffect.handleMouseEnter\"]);\n                                }\n                            }\n                        }\n                    }[\"useHeadingAnimation.useEffect.handleMouseEnter\"];\n                    const handleMouseLeave = {\n                        \"useHeadingAnimation.useEffect.handleMouseLeave\": ()=>{\n                            // Reset color\n                            if (hoverColor) {\n                                char.style.color = '';\n                            }\n                            // Remove glow effect\n                            if (addGlow) {\n                                char.style.textShadow = '';\n                            }\n                        }\n                    }[\"useHeadingAnimation.useEffect.handleMouseLeave\"];\n                    char.addEventListener('mouseenter', handleMouseEnter);\n                    char.addEventListener('mouseleave', handleMouseLeave);\n                }\n            }[\"useHeadingAnimation.useEffect\"]);\n            // Cleanup function\n            return ({\n                \"useHeadingAnimation.useEffect\": ()=>{\n                    timelinesRef.current.forEach({\n                        \"useHeadingAnimation.useEffect\": (tl)=>tl.kill()\n                    }[\"useHeadingAnimation.useEffect\"]);\n                    charsRef.current.forEach({\n                        \"useHeadingAnimation.useEffect\": (char)=>{\n                            var _char_parentNode;\n                            const clone = char.cloneNode(true);\n                            (_char_parentNode = char.parentNode) === null || _char_parentNode === void 0 ? void 0 : _char_parentNode.replaceChild(clone, char);\n                        }\n                    }[\"useHeadingAnimation.useEffect\"]);\n                }\n            })[\"useHeadingAnimation.useEffect\"];\n        }\n    }[\"useHeadingAnimation.useEffect\"], [\n        animationType,\n        duration,\n        ease,\n        scale,\n        enableSquish,\n        hoverColor,\n        addGlow,\n        adjacentStagger\n    ]);\n    return headingRef;\n};\n_s(useHeadingAnimation, \"8basNbOB6/iN+SOT/EaXqlz+jq4=\");\n// Export preset configurations - optimized for no layout shift\nconst HEADING_ANIMATION_PRESETS = {\n    playful: {\n        animationType: 'bounce',\n        duration: 0.6,\n        ease: 'elastic.out(1, 0.3)',\n        scale: 1.2,\n        enableSquish: false\n    },\n    elegant: {\n        animationType: 'wave',\n        duration: 0.8,\n        ease: 'power2.out',\n        scale: 1.1,\n        enableSquish: false\n    },\n    energetic: {\n        animationType: 'elastic',\n        duration: 0.7,\n        ease: 'elastic.out(1.2, 0.4)',\n        scale: 1.3,\n        enableSquish: false,\n        addGlow: true\n    },\n    minimal: {\n        animationType: 'squeeze',\n        duration: 0.4,\n        ease: 'power2.inOut',\n        scale: 1.1,\n        enableSquish: false\n    },\n    dynamic: {\n        animationType: 'flip',\n        duration: 0.5,\n        ease: 'back.out(1.7)',\n        scale: 1.15,\n        enableSquish: false\n    },\n    chaotic: {\n        animationType: 'random',\n        duration: 0.6,\n        ease: 'elastic.out(1, 0.3)',\n        scale: 1.2,\n        enableSquish: false,\n        adjacentStagger: 0.08\n    },\n    gsapStyle: {\n        animationType: 'bounce',\n        duration: 0.5,\n        ease: 'power2.out',\n        scale: 1,\n        enableSquish: false,\n        hoverColor: '#88CE02',\n        addGlow: false,\n        adjacentStagger: 0\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useHeadingAnimation.tsx\n"));

/***/ })

});